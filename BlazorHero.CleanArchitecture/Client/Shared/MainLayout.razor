@inherits LayoutComponentBase
@inject BrowserService browserService;

<MudThemeProvider Theme="currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />
<AuthorizeView>
    <NotAuthorized>
        <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center" Style="height: 100vh;">
            <MudPaper Elevation="25" Class="pa-8" Style="width:500px;">
                @Body
                <MudItem xs="12" Class="d-flex justify-center">
                    <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" Class="pa-8" OnClick="@((e) => DarkMode())" />
                </MudItem>
            </MudPaper>
        </MudContainer>
    </NotAuthorized>

    <Authorized>
        @(LoadDataAsync())
        <MudLayout>
            <MudAppBar Elevation="4" Color="Color.Primary">
                <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Large" />
                <MudText Typo="Typo.h6" Class="ml-4">BlazorHero - Clean Architecture</MudText>
                <MudAppBarSpacer />
                <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                    <MudMenu EndIcon="@Icons.Filled.KeyboardArrowDown" Label="Support" Color="Color.Inherit" Dense="true" Direction="Direction.Right" OffsetY="true">
                        <MudText Typo="Typo.body2" Class="px-4 py-2"><b>Community</b></MudText>
                        <MudMenuItem Link="https://www.facebook.com/groups/about.asp.net.core" Target="_blank">Facebook Group</MudMenuItem>
                        <MudMenuItem Link="https://www.facebook.com/codewithmukesh" Target="_blank">Contact Me</MudMenuItem>
                        <MudText Typo="Typo.body2" Class="px-4 py-2"><b>Resources</b></MudText>
                        <MudMenuItem Link="https://mudblazor.com/" Target="_blank">MudBlazor Documentation</MudMenuItem>
                        <MudMenuItem Link="https://github.com/blazorhero/CleanArchitecture" Target="_blank">Quick-Start Guide</MudMenuItem>
                    </MudMenu>
                    <MudDivider Vertical="true" FlexItem="true" DividerType="DividerType.Middle" Class="mx-4 my-5" />
                    <MudTooltip Text="Toggle Dark Mode">
                        <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => DarkMode())" />
                    </MudTooltip>
                    <MudTooltip Text="Fork Repository">
                        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/blazorhero/CleanArchitecture" Target="_blank" />
                    </MudTooltip>
                </MudHidden>
                <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                    <MudMenu Icon="@Icons.Filled.Settings" Color="Color.Inherit" Dense="true" Direction="Direction.Right" OffsetY="true">
                        <div class="px-2">
                            <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => DarkMode())" />
                            <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/blazorhero/CleanArchitecture" Target="_blank" />
                        </div>
                        <MudText Typo="Typo.body2" Class="px-4 py-2"><b>Community</b></MudText>
                        <MudMenuItem Link="https://www.facebook.com/groups/about.asp.net.core" Target="_blank">Facebook Group</MudMenuItem>
                        <MudMenuItem Link="https://www.facebook.com/codewithmukesh" Target="_blank">Contact Me</MudMenuItem>
                        <MudText Typo="Typo.body2" Class="px-4 py-2"><b>Resources</b></MudText>
                        <MudMenuItem Link="https://mudblazor.com/getting-started/installation" Target="_blank">MudBlazor Documentation</MudMenuItem>
                        <MudMenuItem Link="https://github.com/blazorhero/CleanArchitecture" Target="_blank">Quick-Start Guide</MudMenuItem>
                    </MudMenu>
                </MudHidden>
                <MudMenu Direction="Direction.Left" OffsetX="true" Dense="true" Class="mt-1 ml-4">
                    <ActivatorContent>
                        <MudAvatar Color="Color.Secondary">@FirstLetterOfName</MudAvatar>
                    </ActivatorContent>
                    <ChildContent>
                        <UserCard Class="mt-n2" />
                        <MudDivider Class="mb-2" />
                        <MudListItem Text="Account" Icon="@Icons.Material.Outlined.Person" />
                        <MudListItem Text="Logout" Icon="@Icons.Material.Outlined.Login" OnClick="Logout" />
                    </ChildContent>
                </MudMenu>
            </MudAppBar>
            <MudDrawer @bind-Open="_drawerOpen" Elevation="25" ClipMode="DrawerClipMode.Always">
                <NavMenu />
            </MudDrawer>
            <MudMainContent>
                <MudToolBar DisableGutters="true">
                    <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" OnClick="@((e) => DrawerToggle())" Class="ml-3" />
                    <MudBreadcrumbs Items="_items"></MudBreadcrumbs>
                </MudToolBar>
                <MudContainer MaxWidth="MaxWidth.False" Class="mt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
</AuthorizeView>
@code {
    private string FirstName { get; set; }
    private string SecondName { get; set; }
    private string Email { get; set; }
    private char FirstLetterOfName { get; set; }
    private async Task LoadDataAsync()
    {
        var state = await _authState.GetAuthenticationStateAsync();
        var user = state.User;
        if (user == null) return;
        if (user.Identity.IsAuthenticated)
        {
            this.FirstName = user.GetFirstName();
            if (this.FirstName.Length > 0)
            {
                FirstLetterOfName = FirstName[0];
            }
        }

    }
    MudTheme currentTheme;
    private bool _drawerOpen = true;
    protected override async Task OnInitializedAsync()
    {
        currentTheme = await browserService.GetCurrentThemeAsync();
    }
    void Logout()
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Do you really want to Logout?");
        parameters.Add("ButtonText", "Logout");
        parameters.Add("Color", Color.Error);

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Large };

        _dialogService.Show<Dialogs.Logout>("Logout", parameters, options);
    }
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
{
        new BreadcrumbItem("Personal", href: "#"),
        new BreadcrumbItem("Dashboard", href: "#"),
    };

    async Task DarkMode()
    {
        bool isDarkMode = await browserService.ToggleDarkMode();
        if (isDarkMode)
        {
            currentTheme = BlazorHeroTheme.DefaultTheme;
        }
        else
        {
            currentTheme = BlazorHeroTheme.DarkTheme;
        }
    }
    private void DeleteUser()
    {

    }

}